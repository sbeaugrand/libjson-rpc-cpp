From: Baptiste Beauplat <lyknode@cilg.org>
Date: Thu, 8 Oct 2020 22:44:11 +0200
Subject: Fix FTBFS with libmicrohttpd 0.9.71

Closes: #964592
Bug: https://github.com/cinemast/libjson-rpc-cpp/issues/298
---
 src/jsonrpccpp/server/connectors/httpserver.cpp | 2 +-
 src/jsonrpccpp/server/connectors/httpserver.h   | 2 +-
 src/test/testhttpserver.cpp                     | 4 ++--
 src/test/testhttpserver.h                       | 4 ++--
 4 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/src/jsonrpccpp/server/connectors/httpserver.cpp b/src/jsonrpccpp/server/connectors/httpserver.cpp
index 40d3c5e..d1bad41 100644
--- a/src/jsonrpccpp/server/connectors/httpserver.cpp
+++ b/src/jsonrpccpp/server/connectors/httpserver.cpp
@@ -119,7 +119,7 @@ void HttpServer::SetUrlHandler(const string &url, IClientConnectionHandler *hand
     this->SetHandler(NULL);
 }
 
-int HttpServer::callback(void *cls, MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls)
+MHD_Result HttpServer::callback(void *cls, MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls)
 {
     (void)version;
     if (*con_cls == NULL)
diff --git a/src/jsonrpccpp/server/connectors/httpserver.h b/src/jsonrpccpp/server/connectors/httpserver.h
index 075962c..0f66423 100644
--- a/src/jsonrpccpp/server/connectors/httpserver.h
+++ b/src/jsonrpccpp/server/connectors/httpserver.h
@@ -71,7 +71,7 @@ namespace jsonrpc
 
             std::map<std::string, IClientConnectionHandler*> urlhandler;
 
-            static int callback(void *cls, struct MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls);
+            static MHD_Result callback(void *cls, struct MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls);
 
             IClientConnectionHandler* GetHandler(const std::string &url);
 
diff --git a/src/test/testhttpserver.cpp b/src/test/testhttpserver.cpp
index 7e240a6..c31440a 100644
--- a/src/test/testhttpserver.cpp
+++ b/src/test/testhttpserver.cpp
@@ -47,7 +47,7 @@ std::string TestHttpServer::GetHeader(const std::string &key)
     return "";
 }
 
-int TestHttpServer::callback(void *cls, MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls)
+MHD_Result TestHttpServer::callback(void *cls, MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls)
 {
     (void)upload_data;
     (void)upload_data_size;
@@ -73,7 +73,7 @@ int TestHttpServer::callback(void *cls, MHD_Connection *connection, const char *
     return MHD_YES;
 }
 
-int TestHttpServer::header_iterator(void *cls, MHD_ValueKind kind, const char *key, const char *value)
+MHD_Result TestHttpServer::header_iterator(void *cls, MHD_ValueKind kind, const char *key, const char *value)
 {
     (void)kind;
     TestHttpServer* _this = static_cast<TestHttpServer*>(cls);
diff --git a/src/test/testhttpserver.h b/src/test/testhttpserver.h
index 5521e11..9545aee 100644
--- a/src/test/testhttpserver.h
+++ b/src/test/testhttpserver.h
@@ -36,9 +36,9 @@ namespace jsonrpc {
             std::map<std::string,std::string> headers;
             std::string response;
 
-            static int callback(void *cls, struct MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls);
+            static MHD_Result callback(void *cls, struct MHD_Connection *connection, const char *url, const char *method, const char *version, const char *upload_data, size_t *upload_data_size, void **con_cls);
 
-            static int header_iterator (void *cls, enum MHD_ValueKind kind, const char *key, const char *value);
+            static MHD_Result header_iterator (void *cls, enum MHD_ValueKind kind, const char *key, const char *value);
     };
 
 } // namespace jsonrpc
